// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compile > should render container content correctly 1`] = `
"<div>
  <div>TIP</div>
  <div>
    <p>First line <code>block</code></p>
    <p>Second line <code>block2</code></p>
  </div>
</div>
<div>
  <div>TIP</div>
  <div>
    <ul>
      <li>List item 1 <code>block</code>。</li>
      <li>List item 2 <code>block2</code>。</li>
    </ul>
  </div>
</div>
<div>
  <div>TIP</div>
  <div>
    <p>Some code:</p>
    <pre><code>console.log('hello world');
</code></pre>
  </div>
</div>
"
`;

exports[`compile > should render container content correctly 2`] = `
"import { useMDXComponents as _provideComponents } from \\"@mdx-js/react\\";
function _createMdxContent(props) {
  const _components = Object.assign(
    {
      div: \\"div\\",
      p: \\"p\\",
      code: \\"code\\",
      ul: \\"ul\\",
      li: \\"li\\",
      pre: \\"pre\\",
    },
    _provideComponents(),
    props.components
  );
  return (
    <>
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"TIP\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"First line \\"}
            <_components.code>{\\"block\\"}</_components.code>
          </_components.p>
          {\\"<LF>\\"}
          <_components.p>
            {\\"Second line \\"}
            <_components.code>{\\"block2\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"TIP\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          {\\"<LF>\\"}
          <_components.ul>
            {\\"<LF>\\"}
            <_components.li>
              {\\"List item 1 \\"}
              <_components.code>{\\"block\\"}</_components.code>
              {\\"。\\"}
            </_components.li>
            {\\"<LF>\\"}
            <_components.li>
              {\\"List item 2 \\"}
              <_components.code>{\\"block2\\"}</_components.code>
              {\\"。\\"}
            </_components.li>
            {\\"<LF>\\"}
          </_components.ul>
          {\\"<LF>\\"}
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"TIP\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          {\\"<LF>\\"}
          <_components.p>{\\"Some code:\\"}</_components.p>
          {\\"<LF>\\"}
          <_components.pre>
            <_components.code className=\\"language-ts\\">
              {\\"console.log('hello world');<LF>\\"}
            </_components.code>
          </_components.pre>
          {\\"<LF>\\"}
        </_components.div>
      </_components.div>
    </>
  );
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = Object.assign(
    {},
    _provideComponents(),
    props.components
  );
  return MDXLayout ? (
    <MDXLayout {...props}>
      <_createMdxContent {...props} />
    </MDXLayout>
  ) : (
    _createMdxContent(props)
  );
}
export default MDXContent;
"
`;

exports[`compile > should render container title in md correctly 1`] = `
"<h2 id=\\"custom-title\\">
  Container Title<a aria-hidden=\\"true\\" href=\\"#custom-title\\">#</a>
</h2>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
"
`;

exports[`compile > should render container title in md correctly 2`] = `
"import { useMDXComponents as _provideComponents } from \\"@mdx-js/react\\";
function _createMdxContent(props) {
  const _components = Object.assign(
    {
      h2: \\"h2\\",
      a: \\"a\\",
      div: \\"div\\",
      p: \\"p\\",
      code: \\"code\\",
    },
    _provideComponents(),
    props.components
  );
  return (
    <>
      <_components.h2 id=\\"custom-title\\">
        {\\"Container Title\\"}
        <_components.a
          className=\\"header-anchor\\"
          aria-hidden=\\"true\\"
          href=\\"#custom-title\\"
        >
          {\\"#\\"}
        </_components.a>
      </_components.h2>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"Custom Title\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of \\"}
            <_components.code>{\\"Custom Title\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"Custom Title\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of \\"}
            <_components.code>{\\"Custom Title\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"Custom Title\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of \\"}
            <_components.code>{\\"Custom Title\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"Custom Title\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of \\"}
            <_components.code>{\\"Custom Title\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
    </>
  );
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = Object.assign(
    {},
    _provideComponents(),
    props.components
  );
  return MDXLayout ? (
    <MDXLayout {...props}>
      <_createMdxContent {...props} />
    </MDXLayout>
  ) : (
    _createMdxContent(props)
  );
}
export default MDXContent;
"
`;

exports[`compile > should render container title in mdx correctly 1`] = `
"<h2 id=\\"custom-title\\">
  Container Title <a aria-hidden=\\"true\\" href=\\"#custom-title\\">#</a>
</h2>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
<div>
  <div>Custom Title</div>
  <div>
    <p>This is a <code>block</code> of <code>Custom Title</code></p>
  </div>
</div>
"
`;

exports[`compile > should render container title in mdx correctly 2`] = `
"import { useMDXComponents as _provideComponents } from \\"@mdx-js/react\\";
function _createMdxContent(props) {
  const _components = Object.assign(
    {
      h2: \\"h2\\",
      a: \\"a\\",
      div: \\"div\\",
      p: \\"p\\",
      code: \\"code\\",
    },
    _provideComponents(),
    props.components
  );
  return (
    <>
      <_components.h2 id=\\"custom-title\\">
        {\\"Container Title \\"}
        <_components.a
          className=\\"header-anchor\\"
          aria-hidden=\\"true\\"
          href=\\"#custom-title\\"
        >
          {\\"#\\"}
        </_components.a>
      </_components.h2>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"Custom Title\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"<LF>This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of \\"}
            <_components.code>{\\"Custom Title\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"Custom Title\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"<LF>This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of \\"}
            <_components.code>{\\"Custom Title\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"Custom Title\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of \\"}
            <_components.code>{\\"Custom Title\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"Custom Title\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of \\"}
            <_components.code>{\\"Custom Title\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
    </>
  );
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = Object.assign(
    {},
    _provideComponents(),
    props.components
  );
  return MDXLayout ? (
    <MDXLayout {...props}>
      <_createMdxContent {...props} />
    </MDXLayout>
  ) : (
    _createMdxContent(props)
  );
}
export default MDXContent;
"
`;

exports[`compile > should render container type correctly 1`] = `
"<div>
  <div>TIP</div>
  <div>
    <p>This is a <code>block</code> of type <code>tip</code></p>
  </div>
</div>
<div>
  <div>INFO</div>
  <div>
    <p>This is a <code>block</code> of type <code>info</code></p>
  </div>
</div>
<div>
  <div>NOTE</div>
  <div>
    <p>This is a <code>block</code> of type <code>info</code></p>
  </div>
</div>
<div>
  <div>WARNING</div>
  <div>
    <p>This is a <code>block</code> of type <code>warning</code></p>
  </div>
</div>
<div>
  <div>DANGER</div>
  <div>
    <p>This is a <code>block</code> of type <code>danger</code></p>
  </div>
</div>
<div>
  <div>CAUTION</div>
  <div>
    <p>This is a <code>block</code> of type <code>danger</code></p>
  </div>
</div>
"
`;

exports[`compile > should render container type correctly 2`] = `
"import { useMDXComponents as _provideComponents } from \\"@mdx-js/react\\";
function _createMdxContent(props) {
  const _components = Object.assign(
    {
      div: \\"div\\",
      p: \\"p\\",
      code: \\"code\\",
    },
    _provideComponents(),
    props.components
  );
  return (
    <>
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"TIP\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of type \\"}
            <_components.code>{\\"tip\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive info\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"INFO\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of type \\"}
            <_components.code>{\\"info\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive note\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"NOTE\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of type \\"}
            <_components.code>{\\"info\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive warning\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"WARNING\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of type \\"}
            <_components.code>{\\"warning\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive danger\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"DANGER\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of type \\"}
            <_components.code>{\\"danger\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive caution\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"CAUTION\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of type \\"}
            <_components.code>{\\"danger\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
    </>
  );
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = Object.assign(
    {},
    _provideComponents(),
    props.components
  );
  return MDXLayout ? (
    <MDXLayout {...props}>
      <_createMdxContent {...props} />
    </MDXLayout>
  ) : (
    _createMdxContent(props)
  );
}
export default MDXContent;
"
`;

exports[`compile > should render container type with space correctly 1`] = `
"<div>
  <div>TIP</div>
  <div>
    <p>This is a <code>block</code> of type <code>tip</code></p>
  </div>
</div>
<div>
  <div>TIP</div>
  <div>
    <p>This is a <code>block</code> of type <code>tip</code></p>
  </div>
</div>
<div>
  <div>INFO</div>
  <div>
    <p>This is a <code>block</code> of type <code>info</code></p>
  </div>
</div>
<div>
  <div>NOTE</div>
  <div>
    <p>This is a <code>block</code> of type <code>info</code></p>
  </div>
</div>
<div>
  <div>WARNING</div>
  <div>
    <p>This is a <code>block</code> of type <code>warning</code></p>
  </div>
</div>
<div>
  <div>DANGER</div>
  <div>
    <p>This is a <code>block</code> of type <code>danger</code></p>
  </div>
</div>
<div>
  <div>CAUTION</div>
  <div>
    <p>This is a <code>block</code> of type <code>danger</code></p>
  </div>
</div>
"
`;

exports[`compile > should render container type with space correctly 2`] = `
"import { useMDXComponents as _provideComponents } from \\"@mdx-js/react\\";
function _createMdxContent(props) {
  const _components = Object.assign(
    {
      div: \\"div\\",
      p: \\"p\\",
      code: \\"code\\",
    },
    _provideComponents(),
    props.components
  );
  return (
    <>
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"TIP\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of type \\"}
            <_components.code>{\\"tip\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive tip\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"TIP\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of type \\"}
            <_components.code>{\\"tip\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive info\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"INFO\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of type \\"}
            <_components.code>{\\"info\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive note\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"NOTE\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of type \\"}
            <_components.code>{\\"info\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive warning\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"WARNING\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of type \\"}
            <_components.code>{\\"warning\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive danger\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"DANGER\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of type \\"}
            <_components.code>{\\"danger\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
      {\\"<LF>\\"}
      <_components.div className=\\"rspress-directive caution\\">
        <_components.div className=\\"rspress-directive-title\\">
          {\\"CAUTION\\"}
        </_components.div>
        <_components.div className=\\"rspress-directive-content\\">
          <_components.p>
            {\\"This is a \\"}
            <_components.code>{\\"block\\"}</_components.code>
            {\\" of type \\"}
            <_components.code>{\\"danger\\"}</_components.code>
            {\\"<LF>\\"}
          </_components.p>
        </_components.div>
      </_components.div>
    </>
  );
}
function MDXContent(props = {}) {
  const { wrapper: MDXLayout } = Object.assign(
    {},
    _provideComponents(),
    props.components
  );
  return MDXLayout ? (
    <MDXLayout {...props}>
      <_createMdxContent {...props} />
    </MDXLayout>
  ) : (
    _createMdxContent(props)
  );
}
export default MDXContent;
"
`;
